steps:
  # Show the gcloud info and check if gcloud exists
  - name: ${_PYTHON_IMAGE}
    entrypoint: /bin/sh
    args:
    - -c
    - 'gcloud config list'
  # Check the Python version
  - name: ${_PYTHON_IMAGE}
    entrypoint: /bin/sh
    args:
    - -c
    - python3 .cloud-build/CheckPythonVersion.py
  # Create a virtual environment
  - name: ${_PYTHON_IMAGE}
    entrypoint: /bin/sh
    args:
    - -c
    - python3 -m venv workspace/env
  # Install Python dependencies
  - name: ${_PYTHON_IMAGE}
    entrypoint: /bin/sh
    args:
    - -c 
    - . workspace/env/bin/activate &&
      python3 -m pip install -U pip &&
      python3 -m pip install -U -r .cloud-build/requirements.txt
  # pip freeze
  - name: ${_PYTHON_IMAGE}
    entrypoint: /bin/sh
    args:
    - -c
    - |
      . workspace/env/bin/activate &&
      python3 -m pip freeze    
  # Install Python dependencies and run testing script
  - name: ${_PYTHON_IMAGE}
    entrypoint: /bin/sh
    args:
    - -c
    - | 
      . workspace/env/bin/activate &&
      python3 .cloud-build/execute_notebook_cli.py --notebook_source "${_NOTEBOOK_GCS_URI}" --output_file_or_uri "${_NOTEBOOK_OUTPUT_GCS_URI}"
    env:
    - 'IS_TESTING=1'
timeout: 86400s